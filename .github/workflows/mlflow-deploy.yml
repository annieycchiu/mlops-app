name: Build and Deploy MLFlow Server to Cloud Run

on:
  push:
    branches: 
        - main
    paths:
        - mlflow/**
        - .github/workflows/mlflow-deploy.yml

env:
      PROJECT_ID: my-sixth-project-431318  # Google Cloud project id
      REPOSITORY: mlflow-server            # Artifact Registry name
      GAR_LOCATION: us-west1               # Artifact Registry location
      SERVICE: mlflow-server               # Cloud Run service name
      REGION: us-west1                     # Cloud Run service region

jobs:
  deploy:
    name: Deploy Mlflow
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        token_format: access_token
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    # Authenticate Docker to Google Cloud Artifact Registry
    - name: Docker Auth
      id: docker-auth
      uses: docker/login-action@v1
      with:
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

    - name: Build and Push Container
      run: |-
        cd mlflow
        docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/mlflow:${{ github.sha }}" .
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/mlflow:${{ github.sha }}"    

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/mlflow:${{ github.sha }}
        flags: >
          --update-secrets=POSTGRESQL_URL=database_url:latest
          --update-secrets=STORAGE_URL=bucket_url:latest
          --memory 2Gi
          --allow-unauthenticated
          --port 8080